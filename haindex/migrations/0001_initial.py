# Generated by Django 2.1.7 on 2019-02-19 19:48

import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import django_extensions.db.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Repository',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('type', models.IntegerField(choices=[(1, 'Lovelace plugin'), (2, 'Custom component')], null=True, verbose_name='Extension type')),
                ('last_import', models.DateTimeField(blank=True, null=True, verbose_name='Last import')),
                ('has_package_file', models.BooleanField(default=False, verbose_name='Contains a package.yaml')),
                ('last_commit_id', models.CharField(blank=True, max_length=40, verbose_name='Last git commit ID')),
                ('last_push', models.DateTimeField(blank=True, null=True, verbose_name='Last git push')),
                ('stargazers_count', models.IntegerField(blank=True, null=True, verbose_name='Stargazers count')),
                ('forks_count', models.IntegerField(blank=True, null=True, verbose_name='Forks count')),
                ('issues_count', models.IntegerField(blank=True, null=True, verbose_name='Issues count')),
                ('webhook_id', models.IntegerField(blank=True, null=True, verbose_name='GitGub webhook ID')),
                ('name', models.CharField(blank=True, max_length=100, verbose_name='Display name')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('readme', models.TextField(blank=True, verbose_name='Readme')),
                ('keywords', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=30), blank=True, null=True, size=None, verbose_name='Keywords')),
                ('author_name', models.CharField(blank=True, max_length=100, verbose_name='Author name')),
                ('author_homepage', models.URLField(blank=True, verbose_name='Author Homepage')),
                ('author_email', models.EmailField(blank=True, max_length=254, verbose_name='Author email')),
                ('license', models.CharField(blank=True, max_length=100, verbose_name='License')),
                ('files', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=100), blank=True, null=True, size=None, verbose_name='Files')),
                ('dependencies', models.ManyToManyField(blank=True, related_name='provider', to='haindex.Repository', verbose_name='Dependencies')),
                ('parent_repository', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='haindex.Repository', verbose_name='Parent repository')),
            ],
            options={
                'verbose_name': 'Repository',
                'verbose_name_plural': 'Repositories',
            },
        ),
        migrations.CreateModel(
            name='RepositoryRelease',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('tag_name', models.CharField(max_length=50, verbose_name='Tag name')),
                ('body', models.TextField(verbose_name='Body')),
                ('published_at', models.DateTimeField(verbose_name='Published at')),
                ('zipball_url', models.URLField(verbose_name='Zipball URL')),
                ('repository', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='haindex.Repository', verbose_name='Repository')),
            ],
            options={
                'verbose_name': 'Repository release',
                'verbose_name_plural': 'Repository releases',
                'ordering': ('repository', '-published_at'),
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
            },
        ),
        migrations.AlterUniqueTogether(
            name='user',
            unique_together={('name',)},
        ),
        migrations.AddField(
            model_name='repository',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='haindex.User', verbose_name='User'),
        ),
        migrations.AlterUniqueTogether(
            name='repositoryrelease',
            unique_together={('repository', 'tag_name')},
        ),
        migrations.AlterUniqueTogether(
            name='repository',
            unique_together={('user', 'name')},
        ),
    ]
